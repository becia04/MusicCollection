@model IEnumerable<MusicCollection.Models.Album>
<style>
    h1 {
        font-family: "Jaini", system-ui;
        font-weight: 400;
        font-style: normal;
    }

    h2 {
        font-family: "Jaini", system-ui;
        font-weight: 400;
        font-style: normal;
    }
</style>
@{
    var artistName = ViewBag.ArtistName ?? "Unknown Artist";
    var albumsByType = Model.OrderBy(a => a.Type.Name).GroupBy(a => a.Type.Name);
    var albumCountByType = Model.GroupBy(a => a.Type.Name)
                                .Select(g => new { TypeName = g.Key, AlbumCount = g.Count() })
                                .OrderBy(g => g.TypeName);
    var groupAlbums = ViewBag.GroupAlbums as Dictionary<string, List<MusicCollection.Models.Album>>;
    ViewBag.Title = artistName;
}

<h1>@artistName</h1>

<div style="display: flex; flex-wrap: wrap;">
    @foreach (var countByType in albumCountByType)
    {
        <div style="margin-right: 20px;">
            <p>@countByType.TypeName: @countByType.AlbumCount</p>
        </div>
    }
</div>

@foreach (var group in albumsByType)
{
    <h2>@group.Key</h2>
    <div>
        <table>
            @foreach (var album in group)
            {
                <tr>
                    <td>
                        <img src="@album.Poster" class="imgbtn" height="200" width="200" alt="@album.Title" onclick="showEnlargedImage('@album.Poster')" />
                    </td>
                    <td>
                        <h2>@album.Title</h2>
                        @{
                            var cooperatingArtists = album.ArtistAlbums?
                            .Where(aa => aa.Artist != null && aa.Artist.Name != artistName)
                            .Select(aa => aa.Artist.Name)
                            .ToList() ?? new List<string>();
                        }
                        @if (cooperatingArtists.Any())
                        {
                            <p><b>Kolaboracja z:</b> @string.Join(", ", cooperatingArtists)</p>
                        }
                        <ul class="list-group bg-transparent list-group-light" style="border: none;">
                            <li class="list-group-item bg-transparent" style="border: none;"><b>Gatunek: </b>@album.Category.Name</li>
                            <li class="list-group-item bg-transparent" style="border: none;"><b>Rok wydania: </b>@album.PublishDate</li>
                        </ul>
                    </td>
                </tr>
            }
        </table>
    </div>
}

@if (groupAlbums != null && groupAlbums.Any())
{
    @foreach (var group in groupAlbums)
    {
        <h2>@group.Key</h2> <!-- Nazwa grupy -->
        @foreach (var groupAlbum in group.Value.OrderBy(a => a.Type.Name).GroupBy(a => a.Type.Name))
        {
            <h3>@groupAlbum.Key</h3> <!-- Typ albumu -->
            <div>
                <table>
                    @foreach (var album in groupAlbum)
                    {
                        <tr>
                            <td>
                                <img src="@album.Poster" class="imgbtn" height="200" width="200" alt="@album.Title" onclick="showEnlargedImage('@album.Poster')" />
                            </td>
                            <td>
                                <h2>@album.Title</h2>
                                <ul class="list-group bg-transparent list-group-light" style="border: none;">
                                    <li class="list-group-item bg-transparent" style="border: none;"><b>Gatunek: </b>@album.Category.Name</li>
                                    <li class="list-group-item bg-transparent" style="border: none;"><b>Rok wydania: </b>@album.PublishDate</li>
                                </ul>
                            </td>
                        </tr>
                    }
                </table>
            </div>
        }
    }
}
